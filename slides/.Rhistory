options(htmltools.dir.version = FALSE)
```{r load packages, include = FALSE}
dataset <- read_csv("../data_raw/fricatives.csv")
```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
```
```{r load packages, include = FALSE}
library(untidydata)
library(xaringan)
library(plot3D)
library(tidyverse)
```
```{r load dataset, include = FALSE}
dataset <- read_csv("../data_raw/fricatives.csv")
```
dataset %>%
select(., -obs, s_skewness, sh_skewness)
```{r load packages, include = FALSE}
library(untidydata)
library(xaringan)
library(plot3D)
library(tidyverse)
```
```{r load dataset, include = FALSE}
dataset <- read_csv("../data_raw/fricatives.csv")
```
str(dataset)
dataset %>%
separate(., col = s_cog, into = c('phon', 'phonvalue'), sep = "_")
as.data.frame(t(mtcars))
as.data.frame(t(dataset))
as.data.frame(dataset)
dataset %>%
gather(var, value, everything()) %>% spread(var, value)
dataset %>%
gather(var, value, everything())
dataset %>%
gather(var, value, everything()) %>% spread(var, value)
dataset %>%
gather(var, value, everything())
data1 <- dataset %>%
gather(var, value, everything())
View(data1)
str(dataset)
data1 <- dataset %>%
gather(var, value, everything(-obs))
str(dataset)
data1 <- dataset %>%
gather(var, value, everything(-'obs'))
str(dataset)
data1 <- dataset %>%
gather(var, value, everything())
str(dataset)
data1 <- dataset %>%
gather(var != 'obs', value, everything())
str(dataset)
data2 <- dataset %>%
gather(var != 'obs', value, everything())
View(data2)
str(dataset)
data2 <- dataset %>%
gather(var =! 'obs', value, everything())
dataset %>%
gather(., key = "category", value = "values", -obs, na.rm = TRUE, convert = FALSE,
factor_key = FALSE)
dataset %>%
gather(., key = "category", value = "values", -obs, na.rm = TRUE, convert = FALSE,
factor_key = FALSE) %>%
separate(., col = category, into = c("phon", "variable"), sep = "_")
dataset1 <- dataset %>%
gather(., key = "category", value = "values", -obs, na.rm = TRUE, convert = FALSE,
factor_key = FALSE) %>%
separate(., col = category, into = c("phon", "variable"), sep = "_")
View(dataset)
View(dataset1)
args(spread)
dataset1 <- dataset %>%
gather(., key = "category", value = "values", -obs, na.rm = TRUE, convert = FALSE,
factor_key = FALSE) %>%
separate(., col = category, into = c("phon", "variable"), sep = "_") %>%
spread(., key = variable, value = values)
View(dataset1)
View(dataset1)
args(mean)
mean(dataset1$cog, phon == 's')
mean(dataset1$cog$phon == 's')
mean(dataset1$cog)
dataset2 <- dataset1 %>%
spread(., key = phon, value = values)
args(spread)
dataset2 <- dataset1 %>%
spread(., key = phon)
dataset2 <- dataset1 %>%
spread(., key = phon, value = cog)
View(dataset2)
mean(dataset$s_cog)
model1 <- dataset1 %>%
mutate(., logCOG = log(cog), logSkewness = log(skewness))
model1 <- dataset1 %>%
mutate(., logCOG = log(cog), logSkewness = log(skewness))
summary(model1)
summary(model1)
model1 <- dataset1 %>%
mutate(., logCOG = log(cog), logSkewness = log(skewness))
summary(model1)
model1 <- dataset1 %>%
mutate(., logCOG = log(cog), logSkewness = log(skewness)) %>%
filter(., phon == 's') %>%
lm(logCOG ~ logSkewness)
summary(model1)
dataset2 <- dataset1 %>%
mutate(., logCOG = log(cog), logSkewness = log(skewness)) %>%
filter(., phon == 's')
str(dataset2)
```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
```
```{r load packages, include = FALSE}
library(untidydata)
library(xaringan)
library(plot3D)
library(tidyverse)
```
```{r load dataset, include = FALSE}
dataset <- read_csv("../data_raw/fricatives.csv")
```
```{r str data}
str(dataset)
```
---
```{r}
dataset1 <- dataset %>%
gather(., key = "category", value = "values", -obs, na.rm = TRUE, convert = FALSE,
factor_key = FALSE) %>%
separate(., col = category, into = c("phon", "variable"), sep = "_") %>%
spread(., key = variable, value = values)
```
---
S  | Mean | Standard deviation |  Median
------------- | ------------- | ------------- | -------------
COG  | `r mean(dataset$s_cog)`  | `r sd(dataset$s_cog)` | `r median(dataset$s_cog)`
Skewness  | `r mean(dataset$s_skewness)`  | `r sd(dataset$s_skewness)` | `r median(dataset$s_skewness)`
SH  | Mean | Standard deviation |  Median
------------- | ------------- | ------------- | -------------
COG  | `r mean(dataset$sh_cog)`  | `r sd(dataset$sh_cog)` | `r median(dataset$sh_cog)`
Skewness  | `r mean(dataset$sh_skewness)`  | `r sd(dataset$sh_skewness)` | `r median(dataset$sh_skewness)`
---
Make a boxplot of center of gravity as a function of phoneme.
```{r boxplot}
dataset1 %>%
ggplot(., aes(x = phon, y = cog, fill = phon)) +
geom_boxplot()
labs(x = 'Phoneme', y = 'Center of gravity')
```
---
```{r statistical transformation}
ggplot(data = dataset1) +
geom_bar(mapping = aes(x = phon, y = skewness), stat = "identity")
```
---
```{r model}
dataset1_s <- dataset1 %>%
filter(., phon == 's')
model1 <- lm(cog ~ skewness, data = dataset1_s)
summary(model1)
```
---
```{r scatterplot de model1}
ggplot(data = dataset1_s, aes(x = cog, y = skewness)) %>%
geom_point() +
geom_smooth(method = lm)
```
ggplot(data = dataset1_s, aes(x = cog, y = skewness)) %>%
geom_point() +
geom_smooth(method = lm)
---
```{r scatterplot de model1}
ggplot(data = dataset1_s, aes(x = cog, y = skewness)) %>%
geom_point() +
geom_smooth(method = lm)
str(model1$residuals)
install.packages("gvlma")
